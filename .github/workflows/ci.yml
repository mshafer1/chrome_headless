name: Docker build

on:
  push:
    branches:
      - 'main'
    paths:
      - '**/*'
      - '!docs'
  workflow_dispatch:

jobs:
  build_and_push:
    runs-on: ubuntu-latest
    environment: Release
    steps:
      - uses: actions/checkout@v3
      
      - name: Log in to Docker Hub
        uses: docker/login-action@f4ef78c080cd8ba55a85445d5b36e214a81df20a
        with:
          username: ${{ vars.DOCKER_USERNAME }}
          password: ${{ secrets.DOCKER_PASSWORD }}
      
      - name: Fetch current versions
        run: |
          docker pull --all-tags ${{ vars.DOCKER_USERNAME }}/headless_chrome
      
      - name: Extract metadata (tags, labels) for Docker
        id: meta
        uses: docker/metadata-action@9ec57ed1fcdbf14dcef7dfbe97b2010124a938b7
        with:
          images: |
            mshafer1/headless_chrome
          flavor: |
            latest=true
          tags: |
            type=ref,event=branch
            type=sha
      - name: Build Docker image
        uses: docker/build-push-action@3b5e8027fcad23fda98b2e3ac259d8d67585f671
        with:
          context: .
          push: false
          tags: dev/chrome:latest , ${{ steps.meta.outputs.tags }}
      - name: Tag with chrome version and conditionally push
        id: chrome_version
        run: |
          chrome_version=`docker run --rm dev/chrome /bin/sh -c "google-chrome --version | sed -r 's/^.+Chrome //g' | tr -d '\n' | tr -d ' ' | cut -d'.' -f1-"`
          major_chrome_version=`echo ${chrome_version} | cut -d'.' -f1`

          docker tag dev/chrome:latest ${{ vars.DOCKER_USERNAME }}/headless_chrome:chrome_${chrome_version}
          docker tag dev/chrome:latest ${{ vars.DOCKER_USERNAME }}/headless_chrome:chrome_${major_chrome_version}

          current_versions=`docker images --format "{{.Repository}}:{{.Tag}}" | grep mshafer1/headless_chrome`

          # remove other chrome verisons
          echo $current_versions |  sed -e 's/ /\n/g' | grep 'chrome_' | grep -v chrome_${major_chrome_version} | xargs --no-run-if-empty docker rmi

          # remove other sha tags
          sha_tags=`echo $current_versions |  sed -e 's/ /\n/g' | grep 'sha-'`
          current_sha=`echo "${{ steps.meta.outputs.tags }}" | grep sha`
          echo current sha is $current_sha
          echo $sha_tags | sed -e 's/ /\n/g' | grep -v '${current_sha}' | xargs --no-run-if-empty docker rmi

          docker image ls

          # if [[ $(docker image ls | grep -c "chrome_${chrome_version}") -gt 0 ]]; then
          #   echo "Version ${chrome_version} already pushed"
          # else
          #   docker tag dev/chrome:latest ${{ vars.DOCKER_USERNAME }}/headless_chrome:chrome_${chrome_version}
          #   docker tag dev/chrome:latest ${{ vars.DOCKER_USERNAME }}/headless_chrome:chrome_${major_chrome_version}
          #   docker image push --all-tags ${{ vars.DOCKER_USERNAME }}/headless_chrome
          # fi
